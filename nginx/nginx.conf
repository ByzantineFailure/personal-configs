user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    # HTTPS Server - all requests will be directed here by the HTTP block below
    # Listens on 443
    # Lets Certbot manage its TLS certificate
    server {
        server_name  www.byzantinefailure.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

	location ^~ /foundry {
	    # Set proxy headers
	    proxy_set_header Host $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
            
            # These are important to support WebSockets
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "Upgrade";

	    proxy_pass http://127.0.0.1:30000;
	}

        location / {
            root   /srv/www;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/www.byzantinefailure.com/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/www.byzantinefailure.com/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }
	
    # Automatically redirect all http traffic on 80 to 443
    # 404 if it's not our domain
    server {
        if ($host = www.byzantinefailure.com) {
          return 301 https://$host$request_uri;
        } # managed by Certbot


        listen       80;
        server_name  www.byzantinefailure.com;
        return 404; # managed by Certbot
    }
}
